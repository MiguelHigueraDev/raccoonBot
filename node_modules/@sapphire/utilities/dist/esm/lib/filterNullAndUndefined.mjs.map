{"version":3,"sources":["../../../src/lib/filterNullAndUndefined.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,iBAAiB;AAkBnB,SAAS,uBAA+B,OAA0C;AACxF,SAAO,CAAC,UAAU,KAAK;AACxB;AAFgB","sourcesContent":["import { isNullish } from './isNullOrUndefined';\nimport type { Nullish } from './types';\n\n/**\n * Checks whether a value is not `null` nor `undefined`.\n * This can be used in {@link Array.filter} to remove `null` and `undefined` from the array type\n * @param value The value to verify that is neither `null` nor `undefined`\n * @returns A boolean that is `true` if the value is neither `null` nor `undefined`, false otherwise.\n * @example\n * ```typescript\n * // TypeScript Type: (string | undefined | null)[]\n * const someArray = ['one', 'two', undefined, null, 'five'];\n *\n * // TypeScript Type: string[]\n * const filteredArray = someArray.filter(filterNullAndUndefined);\n * // Result: ['one', 'two', 'five']\n * ```\n */\nexport function filterNullAndUndefined<TValue>(value: TValue | Nullish): value is TValue {\n\treturn !isNullish(value);\n}\n\nexport { filterNullAndUndefined as filterNullish };\n"]}