{"version":3,"sources":["../../../src/lib/filterNullAndUndefinedAndZero.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,+BAA+B;AAkBjC,SAAS,8BAAsC,OAA8C;AACnG,SAAO,CAAC,wBAAwB,KAAK;AACtC;AAFgB","sourcesContent":["import { isNullOrUndefinedOrZero } from './isNullOrUndefinedOrZero';\nimport type { Nullish } from './types';\n\n/**\n * Checks whether a value is not `null` nor `undefined` nor `0`.\n * This can be used in {@link Array.filter} to remove `null`, `undefined` from the array type\n * @param value The value to verify that is neither `null`, `undefined` nor `0`\n * @returns A boolean that is `true` if the value is neither `null`, `undefined` nor `0`, false otherwise.\n * @example\n * ```typescript\n * // TypeScript Type: (string | number | undefined | null)[]\n * const someArray = ['one', 'two', undefined, null, 0, 1];\n *\n * // TypeScript Type: (string | number)[]\n * const filteredArray = someArray.filter(filterNullAndUndefinedAndZero);\n * // Result: ['one', 'two', 1]\n * ```\n */\nexport function filterNullAndUndefinedAndZero<TValue>(value: TValue | Nullish | 0): value is TValue {\n\treturn !isNullOrUndefinedOrZero(value);\n}\n\nexport { filterNullAndUndefinedAndZero as filterNullishAndZero };\n\nexport {\n\t/**\n\t * @deprecated Will be removed in the next major version, switch to either `filterNullishAndZero` or {@link filterNullAndUndefinedAndZero}.\n\t */\n\tfilterNullAndUndefinedAndZero as filterNullishOrZero\n};\n"]}