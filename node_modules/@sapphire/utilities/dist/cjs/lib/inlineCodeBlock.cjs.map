{"version":3,"sources":["../../../src/lib/inlineCodeBlock.ts"],"names":[],"mappings":";;;;AAAA,IAAM,MAAM,OAAO,aAAa,IAAI;AAM7B,SAAS,gBAAkC,SAAwB;AAEzE,YAAU,QAAQ,QAAQ,MAAM,MAAQ;AAGxC,YAAU,QAAQ,QAAQ,MAAM,KAAK,GAAG,EAAE;AAG1C,SAAO,KAAK,OAAO;AACpB;AATgB","sourcesContent":["const zws = String.fromCharCode(8203);\n\n/**\n * Wraps text in a markdown inline codeblock\n * @param content The expression to be wrapped in the codeblock\n */\nexport function inlineCodeBlock<C extends string>(content: C): `\\`${C}\\`` {\n\t// Replace spaces with non-breaking spaces\n\tcontent = content.replace(/ /g, '\\u00A0') as C;\n\n\t// Replace backticks with zero-width-space escaped backticks\n\tcontent = content.replace(/`/g, `\\`${zws}`) as C;\n\n\t// Return the input wrapped in backticks\n\treturn `\\`${content}\\``;\n}\n"]}