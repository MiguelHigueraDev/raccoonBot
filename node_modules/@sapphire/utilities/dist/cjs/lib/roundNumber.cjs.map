{"version":3,"sources":["../../../src/lib/roundNumber.ts"],"names":[],"mappings":";;;;AAMO,SAAS,YAAY,KAAsB,QAAQ,GAAG;AAC5D,MAAI,CAAC,IAAI,SAAS,EAAE,SAAS,GAAG,GAAG;AAClC,WAAO,OAAO,GAAG,KAAK,MAAM,OAAO,GAAG,GAAG,KAAK,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;AAAA,EACpE;AACA,QAAM,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG;AAC9B,MAAI,MAAM;AAEV,MAAI,OAAO,IAAI,CAAC,CAAC,IAAI,QAAQ,GAAG;AAC/B,UAAM;AAAA,EACP;AAEA,SAAO,OAAO,GAAG,KAAK,MAAM,OAAO,GAAG,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,GAAG,GAAG,OAAO,IAAI,CAAC,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC,KAAK,KAAK,EAAE;AACrG;AAZgB","sourcesContent":["/**\n * Properly rounds up or down a number.\n * Also supports strings using an exponent to indicate large or small numbers.\n * @param num The number to round off\n * @param scale The amount of decimals to retain\n */\nexport function roundNumber(num: number | string, scale = 0) {\n\tif (!num.toString().includes('e')) {\n\t\treturn Number(`${Math.round(Number(`${num}e+${scale}`))}e-${scale}`);\n\t}\n\tconst arr = `${num}`.split('e');\n\tlet sig = '';\n\n\tif (Number(arr[1]) + scale > 0) {\n\t\tsig = '+';\n\t}\n\n\treturn Number(`${Math.round(Number(`${Number(arr[0])}e${sig}${Number(arr[1]) + scale}`))}e-${scale}`);\n}\n"]}