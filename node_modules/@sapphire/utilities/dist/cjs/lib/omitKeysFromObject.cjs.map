{"version":3,"sources":["../../../src/lib/omitKeysFromObject.ts"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB;AAYnB,SAAS,mBACf,WACG,MACwB;AAC3B,QAAM,QAAQ,UAAU,MAAM;AAE9B,aAAW,OAAO,MAAM;AACvB,YAAQ,eAAe,OAAO,GAAG;AAAA,EAClC;AAEA,SAAO;AACR;AAXgB","sourcesContent":["import { deepClone } from './deepClone';\n\n/**\n * Clones the source object using {@link deepClone} then deletes the specified keys with {@link Reflect.deleteProperty}\n *\n * @template Object - The object type.\n * @template ObjectKeys - The keys of the object type.\n *\n * @param source - The input object.\n * @param keys - The keys to omit from the object.\n * @returns A new object without the specified keys.\n */\nexport function omitKeysFromObject<Object extends object, ObjectKeys extends keyof Object>(\n\tsource: Object,\n\t...keys: readonly ObjectKeys[]\n): Omit<Object, ObjectKeys> {\n\tconst clone = deepClone(source);\n\n\tfor (const key of keys) {\n\t\tReflect.deleteProperty(clone, key);\n\t}\n\n\treturn clone;\n}\n"]}