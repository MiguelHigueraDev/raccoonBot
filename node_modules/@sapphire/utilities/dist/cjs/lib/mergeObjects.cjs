'use strict';

var isObject_cjs = require('./isObject.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function mergeObjects(objTarget, objSource) {
  for (const [key, value] of Object.entries(objSource)) {
    const targetValue = Reflect.get(objTarget, key);
    if (isObject_cjs.isObject(value)) {
      Reflect.set(objTarget, key, isObject_cjs.isObject(targetValue) ? mergeObjects(targetValue, value) : value);
    } else if (!isObject_cjs.isObject(targetValue)) {
      Reflect.set(objTarget, key, value);
    }
  }
  return objTarget;
}
__name(mergeObjects, "mergeObjects");

exports.mergeObjects = mergeObjects;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=mergeObjects.cjs.map