{"version":3,"sources":["../../../../src/lib/errors/LoaderError.ts"],"names":["LoaderErrorType"],"mappings":";;;;;;;;;AAAO,IAAK,kBAAL,kBAAKA,qBAAL;AACN,EAAAA,iBAAA,iBAAc;AACd,EAAAA,iBAAA,kBAAe;AACf,EAAAA,iBAAA,mBAAgB;AAChB,EAAAA,iBAAA,mBAAgB;AAChB,EAAAA,iBAAA,kBAAe;AALJ,SAAAA;AAAA,GAAA;AAWL,IAAM,eAAN,MAAM,qBAAoB,MAAM;AAAA,EAM/B,YAAY,MAAuB,SAAiB;AAC1D,UAAM,OAAO;AAHd;AAAA;AAAA;AAAA,wBAAgB;AAIf,SAAK,OAAO;AAAA,EACb;AAAA,EAEA,IAAoB,OAAO;AAC1B,WAAO,GAAG,MAAM,IAAI,KAAK,KAAK,IAAI;AAAA,EACnC;AACD;AAduC;AAAhC,IAAM,cAAN","sourcesContent":["export enum LoaderErrorType {\n\tEmptyModule = 'EMPTY_MODULE',\n\tVirtualPiece = 'VIRTUAL_PIECE',\n\tUnloadedPiece = 'UNLOADED_PIECE',\n\tIncorrectType = 'INCORRECT_TYPE',\n\tUnknownStore = 'UNKNOWN_STORE'\n}\n\n/**\n * Describes a loader error with a type for easy identification.\n */\nexport class LoaderError extends Error {\n\t/**\n\t * The type of the error that was thrown.\n\t */\n\tpublic readonly type: LoaderErrorType;\n\n\tpublic constructor(type: LoaderErrorType, message: string) {\n\t\tsuper(message);\n\t\tthis.type = type;\n\t}\n\n\tpublic override get name() {\n\t\treturn `${super.name} [${this.type}]`;\n\t}\n}\n"]}