'use strict';

var __defProp = Object.defineProperty;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __publicField = (obj, key, value) => {
  __defNormalProp(obj, typeof key !== "symbol" ? key + "" : key, value);
  return value;
};

// src/lib/errors/LoaderError.ts
var LoaderErrorType = /* @__PURE__ */ ((LoaderErrorType2) => {
  LoaderErrorType2["EmptyModule"] = "EMPTY_MODULE";
  LoaderErrorType2["VirtualPiece"] = "VIRTUAL_PIECE";
  LoaderErrorType2["UnloadedPiece"] = "UNLOADED_PIECE";
  LoaderErrorType2["IncorrectType"] = "INCORRECT_TYPE";
  LoaderErrorType2["UnknownStore"] = "UNKNOWN_STORE";
  return LoaderErrorType2;
})(LoaderErrorType || {});
var _LoaderError = class _LoaderError extends Error {
  constructor(type, message) {
    super(message);
    /**
     * The type of the error that was thrown.
     */
    __publicField(this, "type");
    this.type = type;
  }
  get name() {
    return `${super.name} [${this.type}]`;
  }
};
__name(_LoaderError, "LoaderError");
var LoaderError = _LoaderError;

exports.LoaderError = LoaderError;
exports.LoaderErrorType = LoaderErrorType;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=LoaderError.cjs.map