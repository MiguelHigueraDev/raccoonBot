{"version":3,"sources":["../../../src/preconditions/Enabled.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,iBAAiB;AAE1B,SAAS,mBAAmB;AAE5B,SAAS,4BAA4B;AAE9B,IAAM,oBAAN,MAAM,0BAAyB,qBAAqB;AAAA,EACnD,YAAY,SAA6C;AAC/D,UAAM,SAAS,EAAE,UAAU,GAAG,CAAC;AAAA,EAChC;AAAA,EAEO,WAAW,GAAY,SAAkB,SAAoE;AACnH,WAAO,QAAQ,UACZ,KAAK,GAAG,IACR,KAAK,MAAM,EAAE,YAAY,YAAY,iBAAiB,SAAS,qCAAqC,QAAQ,CAAC;AAAA,EACjH;AAAA,EAEO,aAAa,GAAgC,SAAkB,SAAoE;AACzI,WAAO,QAAQ,UACZ,KAAK,GAAG,IACR,KAAK,MAAM,EAAE,YAAY,YAAY,iBAAiB,SAAS,wCAAwC,QAAQ,CAAC;AAAA,EACpH;AAAA,EAEO,eAAe,GAAkC,SAAkB,SAAoE;AAC7I,WAAO,QAAQ,UACZ,KAAK,GAAG,IACR,KAAK,MAAM,EAAE,YAAY,YAAY,iBAAiB,SAAS,0CAA0C,QAAQ,CAAC;AAAA,EACtH;AACD;AAtB2D;AAApD,IAAM,mBAAN;AAwBP,KAAK,UAAU,OAAO,UAAU;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACR,CAAC","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { ChatInputCommandInteraction, ContextMenuCommandInteraction, Message } from 'discord.js';\nimport { Identifiers } from '../lib/errors/Identifiers';\nimport type { Command } from '../lib/structures/Command';\nimport { AllFlowsPrecondition } from '../lib/structures/Precondition';\n\nexport class CorePrecondition extends AllFlowsPrecondition {\n\tpublic constructor(context: AllFlowsPrecondition.LoaderContext) {\n\t\tsuper(context, { position: 10 });\n\t}\n\n\tpublic messageRun(_: Message, command: Command, context: AllFlowsPrecondition.Context): AllFlowsPrecondition.Result {\n\t\treturn command.enabled\n\t\t\t? this.ok()\n\t\t\t: this.error({ identifier: Identifiers.CommandDisabled, message: 'This message command is disabled.', context });\n\t}\n\n\tpublic chatInputRun(_: ChatInputCommandInteraction, command: Command, context: AllFlowsPrecondition.Context): AllFlowsPrecondition.Result {\n\t\treturn command.enabled\n\t\t\t? this.ok()\n\t\t\t: this.error({ identifier: Identifiers.CommandDisabled, message: 'This chat input command is disabled.', context });\n\t}\n\n\tpublic contextMenuRun(_: ContextMenuCommandInteraction, command: Command, context: AllFlowsPrecondition.Context): AllFlowsPrecondition.Result {\n\t\treturn command.enabled\n\t\t\t? this.ok()\n\t\t\t: this.error({ identifier: Identifiers.CommandDisabled, message: 'This context menu command is disabled.', context });\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'Enabled',\n\tpiece: CorePrecondition,\n\tstore: 'preconditions'\n});\n"]}