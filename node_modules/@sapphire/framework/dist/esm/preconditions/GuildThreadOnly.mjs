import { __name } from '../chunk-G5GHKT7C.mjs';
import { container } from '@sapphire/pieces';
import { Identifiers } from '../lib/errors/Identifiers.mjs';
import { AllFlowsPrecondition } from '../lib/structures/Precondition.mjs';

var _CorePrecondition = class _CorePrecondition extends AllFlowsPrecondition {
  messageRun(message) {
    return message.thread ? this.ok() : this.makeSharedError();
  }
  async chatInputRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.isThread() ? this.ok() : this.makeSharedError();
  }
  async contextMenuRun(interaction) {
    const channel = await this.fetchChannelFromInteraction(interaction);
    return channel.isThread() ? this.ok() : this.makeSharedError();
  }
  makeSharedError() {
    return this.error({
      // eslint-disable-next-line deprecation/deprecation
      identifier: Identifiers.PreconditionThreadOnly,
      message: "You can only run this command in server thread channels."
    });
  }
};
__name(_CorePrecondition, "CorePrecondition");
var CorePrecondition = _CorePrecondition;
void container.stores.loadPiece({
  name: "GuildThreadOnly",
  piece: CorePrecondition,
  store: "preconditions"
});

export { CorePrecondition };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=GuildThreadOnly.mjs.map