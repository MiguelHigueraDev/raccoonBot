import { __name } from '../chunk-G5GHKT7C.mjs';
import { container } from '@sapphire/pieces';
import { Listener } from '../lib/structures/Listener.mjs';
import { Events } from '../lib/types/Events.mjs';

var _CoreListener = class _CoreListener extends Listener {
  constructor(context) {
    super(context, { event: Events.InteractionCreate });
  }
  async run(interaction) {
    if (interaction.isChatInputCommand()) {
      this.container.client.emit(Events.PossibleChatInputCommand, interaction);
    } else if (interaction.isContextMenuCommand()) {
      this.container.client.emit(Events.PossibleContextMenuCommand, interaction);
    } else if (interaction.isAutocomplete()) {
      this.container.client.emit(Events.PossibleAutocompleteInteraction, interaction);
    } else if (interaction.isMessageComponent() || interaction.isModalSubmit()) {
      await this.container.stores.get("interaction-handlers").run(interaction);
    } else {
      this.container.logger.warn(`[Sapphire ${this.location.name}] Unhandled interaction type: ${interaction.constructor.name}`);
    }
  }
};
__name(_CoreListener, "CoreListener");
var CoreListener = _CoreListener;
void container.stores.loadPiece({
  name: "CoreInteractionCreate",
  piece: CoreListener,
  store: "listeners"
});

export { CoreListener };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=CoreInteractionCreate.mjs.map