{"version":3,"sources":["../../../src/listeners/CoreInteractionCreate.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,iBAAiB;AAE1B,SAAS,gBAAgB;AACzB,SAAS,cAAc;AAEhB,IAAM,gBAAN,MAAM,sBAAqB,SAA0C;AAAA,EACpE,YAAY,SAAiC;AACnD,UAAM,SAAS,EAAE,OAAO,OAAO,kBAAkB,CAAC;AAAA,EACnD;AAAA,EAEA,MAAa,IAAI,aAA0B;AAC1C,QAAI,YAAY,mBAAmB,GAAG;AACrC,WAAK,UAAU,OAAO,KAAK,OAAO,0BAA0B,WAAW;AAAA,IACxE,WAAW,YAAY,qBAAqB,GAAG;AAC9C,WAAK,UAAU,OAAO,KAAK,OAAO,4BAA4B,WAAW;AAAA,IAC1E,WAAW,YAAY,eAAe,GAAG;AACxC,WAAK,UAAU,OAAO,KAAK,OAAO,iCAAiC,WAAW;AAAA,IAC/E,WAAW,YAAY,mBAAmB,KAAK,YAAY,cAAc,GAAG;AAC3E,YAAM,KAAK,UAAU,OAAO,IAAI,sBAAsB,EAAE,IAAI,WAAW;AAAA,IACxE,OAAO;AACN,WAAK,UAAU,OAAO,KAAK,aAAa,KAAK,SAAS,IAAI,iCAAkC,YAAoB,YAAY,IAAI,EAAE;AAAA,IACnI;AAAA,EACD;AACD;AAlB4E;AAArE,IAAM,eAAN;AAoBP,KAAK,UAAU,OAAO,UAAU;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACR,CAAC","sourcesContent":["import { container } from '@sapphire/pieces';\nimport type { Interaction } from 'discord.js';\nimport { Listener } from '../lib/structures/Listener';\nimport { Events } from '../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.InteractionCreate> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.InteractionCreate });\n\t}\n\n\tpublic async run(interaction: Interaction) {\n\t\tif (interaction.isChatInputCommand()) {\n\t\t\tthis.container.client.emit(Events.PossibleChatInputCommand, interaction);\n\t\t} else if (interaction.isContextMenuCommand()) {\n\t\t\tthis.container.client.emit(Events.PossibleContextMenuCommand, interaction);\n\t\t} else if (interaction.isAutocomplete()) {\n\t\t\tthis.container.client.emit(Events.PossibleAutocompleteInteraction, interaction);\n\t\t} else if (interaction.isMessageComponent() || interaction.isModalSubmit()) {\n\t\t\tawait this.container.stores.get('interaction-handlers').run(interaction);\n\t\t} else {\n\t\t\tthis.container.logger.warn(`[Sapphire ${this.location.name}] Unhandled interaction type: ${(interaction as any).constructor.name}`);\n\t\t}\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'CoreInteractionCreate',\n\tpiece: CoreListener,\n\tstore: 'listeners'\n});\n"]}