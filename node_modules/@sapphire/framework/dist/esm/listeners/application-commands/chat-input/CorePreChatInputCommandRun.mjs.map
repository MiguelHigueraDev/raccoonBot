{"version":3,"sources":["../../../../../src/listeners/application-commands/chat-input/CorePreChatInputCommandRun.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,cAAkD;AAEpD,IAAM,gBAAN,MAAM,sBAAqB,SAA+C;AAAA,EACzE,YAAY,SAAiC;AACnD,UAAM,SAAS,EAAE,OAAO,OAAO,uBAAuB,CAAC;AAAA,EACxD;AAAA,EAEA,MAAa,IAAI,SAAwC;AACxD,UAAM,EAAE,SAAS,YAAY,IAAI;AAGjC,UAAM,eAAe,MAAM,KAAK,UAAU,OAAO,IAAI,eAAe,EAAE,aAAa,aAAa,SAAS,OAAc;AACvH,QAAI,aAAa,MAAM,GAAG;AACzB,WAAK,UAAU,OAAO,KAAK,OAAO,wBAAwB,aAAa,UAAU,GAAG,OAAO;AAC3F;AAAA,IACD;AAGA,UAAM,cAAc,MAAM,QAAQ,cAAc,aAAa,aAAa,SAAS,OAAc;AACjG,QAAI,YAAY,MAAM,GAAG;AACxB,WAAK,UAAU,OAAO,KAAK,OAAO,wBAAwB,YAAY,UAAU,GAAG,OAAO;AAC1F;AAAA,IACD;AAEA,SAAK,UAAU,OAAO,KAAK,OAAO,0BAA0B,OAAO;AAAA,EACpE;AACD;AAxBiF;AAA1E,IAAM,eAAN;AA0BP,KAAK,UAAU,OAAO,UAAU;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACR,CAAC","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { Listener } from '../../../lib/structures/Listener';\nimport { Events, type PreChatInputCommandRunPayload } from '../../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.PreChatInputCommandRun> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.PreChatInputCommandRun });\n\t}\n\n\tpublic async run(payload: PreChatInputCommandRunPayload) {\n\t\tconst { command, interaction } = payload;\n\n\t\t// Run global preconditions:\n\t\tconst globalResult = await this.container.stores.get('preconditions').chatInputRun(interaction, command, payload as any);\n\t\tif (globalResult.isErr()) {\n\t\t\tthis.container.client.emit(Events.ChatInputCommandDenied, globalResult.unwrapErr(), payload);\n\t\t\treturn;\n\t\t}\n\n\t\t// Run command-specific preconditions:\n\t\tconst localResult = await command.preconditions.chatInputRun(interaction, command, payload as any);\n\t\tif (localResult.isErr()) {\n\t\t\tthis.container.client.emit(Events.ChatInputCommandDenied, localResult.unwrapErr(), payload);\n\t\t\treturn;\n\t\t}\n\n\t\tthis.container.client.emit(Events.ChatInputCommandAccepted, payload);\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'CorePreChatInputCommandRun',\n\tpiece: CoreListener,\n\tstore: 'listeners'\n});\n"]}