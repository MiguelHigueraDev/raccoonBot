{"version":3,"sources":["../../../src/listeners/CoreReady.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,iBAAiB;AAC1B,SAAS,gBAAgB;AACzB,SAAS,cAAc;AACvB,SAAS,8BAA8B;AAEhC,IAAM,gBAAN,MAAM,sBAAqB,SAAS;AAAA,EACnC,YAAY,SAAiC;AACnD,UAAM,SAAS,EAAE,OAAO,OAAO,aAAa,MAAM,KAAK,CAAC;AAAA,EACzD;AAAA,EAEA,MAAa,MAAM;AAClB,SAAK,UAAU,OAAO,OAAO,KAAK,UAAU,OAAO,MAAM,MAAM;AAE/D,UAAM,uBAAuB;AAAA,EAC9B;AACD;AAV2C;AAApC,IAAM,eAAN;AAYP,KAAK,UAAU,OAAO,UAAU;AAAA,EAC/B,MAAM;AAAA,EACN,OAAO;AAAA,EACP,OAAO;AACR,CAAC","sourcesContent":["import { container } from '@sapphire/pieces';\nimport { Listener } from '../lib/structures/Listener';\nimport { Events } from '../lib/types/Events';\nimport { handleRegistryAPICalls } from '../lib/utils/application-commands/ApplicationCommandRegistries';\n\nexport class CoreListener extends Listener {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.ClientReady, once: true });\n\t}\n\n\tpublic async run() {\n\t\tthis.container.client.id ??= this.container.client.user?.id ?? null;\n\n\t\tawait handleRegistryAPICalls();\n\t}\n}\n\nvoid container.stores.loadPiece({\n\tname: 'CoreReady',\n\tpiece: CoreListener,\n\tstore: 'listeners'\n});\n"]}