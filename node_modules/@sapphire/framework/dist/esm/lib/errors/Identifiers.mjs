import '../../chunk-G5GHKT7C.mjs';

// src/lib/errors/Identifiers.ts
var Identifiers = /* @__PURE__ */ ((Identifiers2) => {
  Identifiers2["ArgsMissing"] = "argsMissing";
  Identifiers2["ArgsUnavailable"] = "argsUnavailable";
  Identifiers2["ArgumentBooleanError"] = "booleanError";
  Identifiers2["ArgumentChannelError"] = "channelError";
  Identifiers2["ArgumentDateError"] = "dateError";
  Identifiers2["ArgumentDateTooEarly"] = "dateTooEarly";
  Identifiers2["ArgumentDateTooFar"] = "dateTooFar";
  Identifiers2["ArgumentDMChannelError"] = "dmChannelError";
  Identifiers2["ArgumentEmojiError"] = "emojiError";
  Identifiers2["ArgumentFloatError"] = "floatError";
  Identifiers2["ArgumentFloatTooLarge"] = "floatTooLarge";
  Identifiers2["ArgumentFloatTooSmall"] = "floatTooSmall";
  Identifiers2["ArgumentGuildError"] = "guildError";
  Identifiers2["ArgumentGuildCategoryChannelError"] = "categoryChannelError";
  Identifiers2["ArgumentGuildChannelError"] = "guildChannelError";
  Identifiers2["ArgumentGuildChannelMissingGuildError"] = "guildChannelMissingGuildError";
  Identifiers2["ArgumentGuildNewsChannelError"] = "guildNewsChannelError";
  Identifiers2["ArgumentGuildNewsThreadChannelError"] = "guildNewsThreadChannelError";
  Identifiers2["ArgumentGuildPrivateThreadChannelError"] = "guildPrivateThreadChannelError";
  Identifiers2["ArgumentGuildPublicThreadChannelError"] = "guildPublicThreadChannelError";
  Identifiers2["ArgumentGuildStageVoiceChannelError"] = "guildStageVoiceChannelError";
  Identifiers2["ArgumentGuildTextChannelError"] = "guildTextChannelError";
  Identifiers2["ArgumentGuildThreadChannelError"] = "guildThreadChannelError";
  Identifiers2["ArgumentGuildVoiceChannelError"] = "guildVoiceChannelError";
  Identifiers2["ArgumentHyperlinkError"] = "hyperlinkError";
  Identifiers2["ArgumentIntegerError"] = "integerError";
  Identifiers2["ArgumentIntegerTooLarge"] = "integerTooLarge";
  Identifiers2["ArgumentIntegerTooSmall"] = "integerTooSmall";
  Identifiers2["ArgumentMemberError"] = "memberError";
  Identifiers2["ArgumentMemberMissingGuild"] = "memberMissingGuild";
  Identifiers2["ArgumentMessageError"] = "messageError";
  Identifiers2["ArgumentNumberError"] = "numberError";
  Identifiers2["ArgumentNumberTooLarge"] = "numberTooLarge";
  Identifiers2["ArgumentNumberTooSmall"] = "numberTooSmall";
  Identifiers2["ArgumentRoleError"] = "roleError";
  Identifiers2["ArgumentRoleMissingGuild"] = "roleMissingGuild";
  Identifiers2["ArgumentStringTooLong"] = "stringTooLong";
  Identifiers2["ArgumentStringTooShort"] = "stringTooShort";
  Identifiers2["ArgumentUserError"] = "userError";
  Identifiers2["ArgumentEnumEmptyError"] = "enumEmptyError";
  Identifiers2["ArgumentEnumError"] = "enumError";
  Identifiers2["CommandDisabled"] = "commandDisabled";
  Identifiers2["PreconditionCooldown"] = "preconditionCooldown";
  Identifiers2["PreconditionDMOnly"] = "preconditionDmOnly";
  Identifiers2["PreconditionGuildNewsOnly"] = "preconditionGuildNewsOnly";
  Identifiers2["PreconditionGuildNewsThreadOnly"] = "preconditionGuildNewsThreadOnly";
  Identifiers2["PreconditionGuildOnly"] = "preconditionGuildOnly";
  Identifiers2["PreconditionGuildPrivateThreadOnly"] = "preconditionGuildPrivateThreadOnly";
  Identifiers2["PreconditionGuildPublicThreadOnly"] = "preconditionGuildPublicThreadOnly";
  Identifiers2["PreconditionGuildTextOnly"] = "preconditionGuildTextOnly";
  Identifiers2["PreconditionGuildVoiceOnly"] = "preconditionGuildVoiceOnly";
  Identifiers2["PreconditionNSFW"] = "preconditionNsfw";
  Identifiers2["PreconditionClientPermissions"] = "preconditionClientPermissions";
  Identifiers2["PreconditionClientPermissionsNoClient"] = "preconditionClientPermissionsNoClient";
  Identifiers2["PreconditionClientPermissionsNoPermissions"] = "preconditionClientPermissionsNoPermissions";
  Identifiers2["PreconditionRunIn"] = "preconditionRunIn";
  Identifiers2["PreconditionUserPermissions"] = "preconditionUserPermissions";
  Identifiers2["PreconditionUserPermissionsNoPermissions"] = "preconditionUserPermissionsNoPermissions";
  Identifiers2["PreconditionThreadOnly"] = "preconditionThreadOnly";
  Identifiers2["PreconditionUnavailable"] = "preconditionUnavailable";
  Identifiers2["PreconditionMissingMessageHandler"] = "preconditionMissingMessageHandler";
  Identifiers2["PreconditionMissingChatInputHandler"] = "preconditionMissingChatInputHandler";
  Identifiers2["PreconditionMissingContextMenuHandler"] = "preconditionMissingContextMenuHandler";
  return Identifiers2;
})(Identifiers || {});

export { Identifiers };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=Identifiers.mjs.map