{"version":3,"sources":["../../../../src/lib/resolvers/guildChannel.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,qBAAqB,sBAAsB;AAEpD,SAAS,cAAc;AAEvB,SAAS,mBAAmB;AAErB,SAAS,oBAAoB,WAAmB,OAAqF;AAC3I,QAAM,UAAU,YAAY,WAAW,KAAK,KAAK,eAAe,WAAW,KAAK;AAEhF,MAAI,SAAS;AACZ,WAAO,OAAO,GAAG,OAAO;AAAA,EACzB;AAEA,SAAO,OAAO,IAAI,YAAY,yBAAyB;AACxD;AARgB;AAUhB,SAAS,YAAY,UAAkB,OAA6C;AACnF,QAAM,YAAY,oBAAoB,KAAK,QAAQ,KAAK,eAAe,KAAK,QAAQ;AACpF,SAAO,YAAa,MAAM,SAAS,MAAM,IAAI,UAAU,CAAC,CAAc,KAAgC,OAAO;AAC9G;AAHS;AAKT,SAAS,eAAe,UAAkB,OAA6C;AACtF,QAAM,oBAAoB,SAAS,YAAY;AAC/C,SAAQ,MAAM,SAAS,MAAM,KAAK,CAAC,YAAY,QAAQ,KAAK,YAAY,MAAM,iBAAiB,KAAgC;AAChI;AAHS","sourcesContent":["import { ChannelMentionRegex, SnowflakeRegex } from '@sapphire/discord-utilities';\nimport type { GuildBasedChannelTypes } from '@sapphire/discord.js-utilities';\nimport { Result } from '@sapphire/result';\nimport type { Guild, Snowflake } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveGuildChannel(parameter: string, guild: Guild): Result<GuildBasedChannelTypes, Identifiers.ArgumentGuildChannelError> {\n\tconst channel = resolveById(parameter, guild) ?? resolveByQuery(parameter, guild);\n\n\tif (channel) {\n\t\treturn Result.ok(channel);\n\t}\n\n\treturn Result.err(Identifiers.ArgumentGuildChannelError);\n}\n\nfunction resolveById(argument: string, guild: Guild): GuildBasedChannelTypes | null {\n\tconst channelId = ChannelMentionRegex.exec(argument) ?? SnowflakeRegex.exec(argument);\n\treturn channelId ? (guild.channels.cache.get(channelId[1] as Snowflake) as GuildBasedChannelTypes) ?? null : null;\n}\n\nfunction resolveByQuery(argument: string, guild: Guild): GuildBasedChannelTypes | null {\n\tconst lowerCaseArgument = argument.toLowerCase();\n\treturn (guild.channels.cache.find((channel) => channel.name.toLowerCase() === lowerCaseArgument) as GuildBasedChannelTypes) ?? null;\n}\n"]}