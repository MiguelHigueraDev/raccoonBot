{"version":3,"sources":["../../../../src/lib/resolvers/emoji.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,YAAY,oBAAoB;AACzC,SAAS,cAAc;AACvB,SAAS,kBAAkB;AAC3B,SAAS,mBAAmB;AAErB,SAAS,aAAa,WAAqD;AACjF,QAAM,UAAU,aAAa,KAAK,SAAS,IAAI,CAAC,KAAK;AAErD,MAAI,SAAS;AACZ,WAAO,OAAO,GAAgB;AAAA,MAC7B,MAAM;AAAA,MACN,IAAI;AAAA,IACL,CAAC;AAAA,EACF;AAEA,QAAM,UAAU,WAAW,KAAK,SAAS;AAEzC,MAAI,SAAS;AACZ,UAAM,WAAW,WAAW,SAAS;AAErC,QAAI,UAAU;AACb,aAAO,OAAO,GAAG,QAAQ;AAAA,IAC1B;AAAA,EACD;AAEA,SAAO,OAAO,IAAI,YAAY,kBAAkB;AACjD;AArBgB","sourcesContent":["import { EmojiRegex, TwemojiRegex } from '@sapphire/discord-utilities';\nimport { Result } from '@sapphire/result';\nimport { parseEmoji } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveEmoji(parameter: string): Result<EmojiObject, Identifiers> {\n\tconst twemoji = TwemojiRegex.exec(parameter)?.[0] ?? null;\n\n\tif (twemoji) {\n\t\treturn Result.ok<EmojiObject>({\n\t\t\tname: twemoji,\n\t\t\tid: null\n\t\t});\n\t}\n\n\tconst emojiId = EmojiRegex.test(parameter);\n\n\tif (emojiId) {\n\t\tconst resolved = parseEmoji(parameter) as EmojiObject | null;\n\n\t\tif (resolved) {\n\t\t\treturn Result.ok(resolved);\n\t\t}\n\t}\n\n\treturn Result.err(Identifiers.ArgumentEmojiError);\n}\n\nexport interface EmojiObject {\n\tname: string | null;\n\tid: string | null;\n\tanimated?: boolean;\n}\n"]}