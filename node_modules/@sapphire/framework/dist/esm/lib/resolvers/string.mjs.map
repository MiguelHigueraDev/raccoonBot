{"version":3,"sources":["../../../../src/lib/resolvers/string.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,cAAc;AACvB,SAAS,mBAAmB;AAErB,SAAS,cACf,WACA,SACyF;AACzF,MAAI,OAAO,SAAS,YAAY,YAAY,UAAU,SAAS,QAAQ,SAAS;AAC/E,WAAO,OAAO,IAAI,YAAY,sBAAsB;AAAA,EACrD;AAEA,MAAI,OAAO,SAAS,YAAY,YAAY,UAAU,SAAS,QAAQ,SAAS;AAC/E,WAAO,OAAO,IAAI,YAAY,qBAAqB;AAAA,EACpD;AAEA,SAAO,OAAO,GAAG,SAAS;AAC3B;AAbgB","sourcesContent":["import { Result } from '@sapphire/result';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport function resolveString(\n\tparameter: string,\n\toptions?: { minimum?: number; maximum?: number }\n): Result<string, Identifiers.ArgumentStringTooShort | Identifiers.ArgumentStringTooLong> {\n\tif (typeof options?.minimum === 'number' && parameter.length < options.minimum) {\n\t\treturn Result.err(Identifiers.ArgumentStringTooShort);\n\t}\n\n\tif (typeof options?.maximum === 'number' && parameter.length > options.maximum) {\n\t\treturn Result.err(Identifiers.ArgumentStringTooLong);\n\t}\n\n\treturn Result.ok(parameter);\n}\n"]}