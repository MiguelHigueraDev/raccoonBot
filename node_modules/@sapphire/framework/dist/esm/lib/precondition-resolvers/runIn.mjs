import { __name } from '../../chunk-G5GHKT7C.mjs';
import { isNullish } from '@sapphire/utilities';
import { Command } from '../structures/Command.mjs';
import { CommandPreConditions } from '../types/Enums.mjs';

function parseConstructorPreConditionsRunIn(runIn, resolveConstructorPreConditionsRunType, preconditionContainerArray) {
  if (isNullish(runIn))
    return;
  if (Command.runInTypeIsSpecificsObject(runIn)) {
    const messageRunTypes = resolveConstructorPreConditionsRunType(runIn.messageRun);
    const chatInputRunTypes = resolveConstructorPreConditionsRunType(runIn.chatInputRun);
    const contextMenuRunTypes = resolveConstructorPreConditionsRunType(runIn.contextMenuRun);
    if (messageRunTypes !== null || chatInputRunTypes !== null || contextMenuRunTypes !== null) {
      preconditionContainerArray.append({
        name: CommandPreConditions.RunIn,
        context: {
          types: {
            messageRun: messageRunTypes ?? [],
            chatInputRun: chatInputRunTypes ?? [],
            contextMenuRun: contextMenuRunTypes ?? []
          }
        }
      });
    }
  } else {
    const types = resolveConstructorPreConditionsRunType(runIn);
    if (types !== null) {
      preconditionContainerArray.append({ name: CommandPreConditions.RunIn, context: { types } });
    }
  }
}
__name(parseConstructorPreConditionsRunIn, "parseConstructorPreConditionsRunIn");

export { parseConstructorPreConditionsRunIn };
//# sourceMappingURL=out.js.map
//# sourceMappingURL=runIn.mjs.map