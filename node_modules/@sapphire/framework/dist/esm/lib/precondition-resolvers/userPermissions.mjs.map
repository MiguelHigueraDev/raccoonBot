{"version":3,"sources":["../../../../src/lib/precondition-resolvers/userPermissions.ts"],"names":[],"mappings":";;;;;AAAA,SAAS,2BAAsD;AAC/D,SAAS,4BAA4B;AAS9B,SAAS,qDACf,yBACA,4BACC;AACD,QAAM,cAAc,IAAI,oBAAoB,uBAAuB;AACnE,MAAI,YAAY,aAAa,IAAI;AAChC,+BAA2B,OAAO,EAAE,MAAM,qBAAqB,iBAAiB,SAAS,EAAE,YAAY,EAAE,CAAC;AAAA,EAC3G;AACD;AARgB","sourcesContent":["import { PermissionsBitField, type PermissionResolvable } from 'discord.js';\nimport { CommandPreConditions } from '../types/Enums';\nimport type { PreconditionContainerArray } from '../utils/preconditions/PreconditionContainerArray';\n\n/**\n * Appends the `UserPermissions` precondition when {@link Command.Options.requiredUserPermissions} resolves to a\n * non-zero bitfield.\n * @param requiredUserPermissions The required user permissions.\n * @param preconditionContainerArray The precondition container array to append the precondition to.\n */\nexport function parseConstructorPreConditionsRequiredUserPermissions(\n\trequiredUserPermissions: PermissionResolvable | undefined,\n\tpreconditionContainerArray: PreconditionContainerArray\n) {\n\tconst permissions = new PermissionsBitField(requiredUserPermissions);\n\tif (permissions.bitfield !== 0n) {\n\t\tpreconditionContainerArray.append({ name: CommandPreConditions.UserPermissions, context: { permissions } });\n\t}\n}\n"]}