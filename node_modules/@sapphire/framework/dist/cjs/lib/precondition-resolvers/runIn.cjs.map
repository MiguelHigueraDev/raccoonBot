{"version":3,"sources":["../../../../src/lib/precondition-resolvers/runIn.ts"],"names":[],"mappings":";;;;AAAA,SAAS,iBAAiB;AAE1B,SAAS,eAAe;AAExB,SAAS,4BAA4B;AAU9B,SAAS,mCACf,OACA,wCACA,4BACC;AAED,MAAI,UAAU,KAAK;AAAG;AAEtB,MAAI,QAAQ,2BAA2B,KAAK,GAAG;AAC9C,UAAM,kBAAkB,uCAAuC,MAAM,UAAU;AAC/E,UAAM,oBAAoB,uCAAuC,MAAM,YAAY;AACnF,UAAM,sBAAsB,uCAAuC,MAAM,cAAc;AAEvF,QAAI,oBAAoB,QAAQ,sBAAsB,QAAQ,wBAAwB,MAAM;AAC3F,iCAA2B,OAAO;AAAA,QACjC,MAAM,qBAAqB;AAAA,QAC3B,SAAS;AAAA,UACR,OAAO;AAAA,YACN,YAAY,mBAAmB,CAAC;AAAA,YAChC,cAAc,qBAAqB,CAAC;AAAA,YACpC,gBAAgB,uBAAuB,CAAC;AAAA,UACzC;AAAA,QACD;AAAA,MACD,CAAC;AAAA,IACF;AAAA,EACD,OAAO;AACN,UAAM,QAAQ,uCAAuC,KAAK;AAC1D,QAAI,UAAU,MAAM;AACnB,iCAA2B,OAAO,EAAE,MAAM,qBAAqB,OAAO,SAAS,EAAE,MAAM,EAAE,CAAC;AAAA,IAC3F;AAAA,EACD;AACD;AA/BgB","sourcesContent":["import { isNullish } from '@sapphire/utilities';\nimport type { ChannelType } from 'discord.js';\nimport { Command } from '../structures/Command';\nimport type { CommandRunInUnion, CommandSpecificRunIn } from '../types/CommandTypes';\nimport { CommandPreConditions } from '../types/Enums';\nimport type { PreconditionContainerArray } from '../utils/preconditions/PreconditionContainerArray';\n\n/**\n * Appends the `RunIn` precondition based on the values passed, defaulting to `null`, which doesn't add a\n * precondition.\n * @param runIn The command's `runIn` option field from the constructor.\n * @param resolveConstructorPreConditionsRunType The function to resolve the run type from the constructor.\n * @param preconditionContainerArray The precondition container array to append the precondition to.\n */\nexport function parseConstructorPreConditionsRunIn(\n\trunIn: CommandRunInUnion | CommandSpecificRunIn,\n\tresolveConstructorPreConditionsRunType: (types: CommandRunInUnion) => readonly ChannelType[] | null,\n\tpreconditionContainerArray: PreconditionContainerArray\n) {\n\t// Early return if there's no runIn option:\n\tif (isNullish(runIn)) return;\n\n\tif (Command.runInTypeIsSpecificsObject(runIn)) {\n\t\tconst messageRunTypes = resolveConstructorPreConditionsRunType(runIn.messageRun);\n\t\tconst chatInputRunTypes = resolveConstructorPreConditionsRunType(runIn.chatInputRun);\n\t\tconst contextMenuRunTypes = resolveConstructorPreConditionsRunType(runIn.contextMenuRun);\n\n\t\tif (messageRunTypes !== null || chatInputRunTypes !== null || contextMenuRunTypes !== null) {\n\t\t\tpreconditionContainerArray.append({\n\t\t\t\tname: CommandPreConditions.RunIn,\n\t\t\t\tcontext: {\n\t\t\t\t\ttypes: {\n\t\t\t\t\t\tmessageRun: messageRunTypes ?? [],\n\t\t\t\t\t\tchatInputRun: chatInputRunTypes ?? [],\n\t\t\t\t\t\tcontextMenuRun: contextMenuRunTypes ?? []\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t} else {\n\t\tconst types = resolveConstructorPreConditionsRunType(runIn);\n\t\tif (types !== null) {\n\t\t\tpreconditionContainerArray.append({ name: CommandPreConditions.RunIn, context: { types } });\n\t\t}\n\t}\n}\n"]}