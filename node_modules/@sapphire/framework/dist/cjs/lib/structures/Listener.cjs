'use strict';

var pieces = require('@sapphire/pieces');
var result = require('@sapphire/result');
var Events_cjs = require('../types/Events.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _Listener = class _Listener extends pieces.Piece {
  constructor(context, options = {}) {
    super(context, options);
    this.emitter = typeof options.emitter === "undefined" ? this.container.client : (typeof options.emitter === "string" ? Reflect.get(this.container.client, options.emitter) : options.emitter) ?? null;
    this.event = options.event ?? this.name;
    this.once = options.once ?? false;
    this._listener = this.emitter && this.event ? this.once ? this._runOnce.bind(this) : this._run.bind(this) : null;
    if (this.emitter === null || this._listener === null)
      this.enabled = false;
  }
  toJSON() {
    return {
      ...super.toJSON(),
      once: this.once,
      event: this.event
    };
  }
  async _run(...args) {
    const result$1 = await result.Result.fromAsync(() => this.run(...args));
    result$1.inspectErr((error) => this.container.client.emit(Events_cjs.Events.ListenerError, error, { piece: this }));
  }
  async _runOnce(...args) {
    await this._run(...args);
    await this.unload();
  }
};
__name(_Listener, "Listener");
var Listener = _Listener;

exports.Listener = Listener;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=Listener.cjs.map