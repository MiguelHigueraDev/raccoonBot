{"version":3,"sources":["../../../../src/lib/structures/ListenerLoaderStrategy.ts"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB;AAIxB,IAAM,0BAAN,MAAM,gCAA+B,eAAyB;AAAA,EACpD,OAAO,QAAuB,OAAiB;AAC9D,UAAM,mBAAmB,MAAM,WAAW;AAC1C,QAAI,kBAAkB;AACrB,YAAM,UAAU,MAAM;AAGtB,YAAM,eAAe,QAAQ,gBAAgB;AAC7C,UAAI,iBAAiB;AAAG,gBAAQ,gBAAgB,eAAe,CAAC;AAEhE,cAAQ,MAAM,OAAO,SAAS,IAAI,EAAE,MAAM,OAAO,gBAAgB;AAAA,IAClE;AAAA,EACD;AAAA,EAEgB,SAAS,QAAuB,OAAiB;AAChE,UAAM,mBAAmB,MAAM,WAAW;AAC1C,QAAI,CAAC,MAAM,QAAQ,kBAAkB;AACpC,YAAM,UAAU,MAAM;AAGtB,YAAM,eAAe,QAAQ,gBAAgB;AAC7C,UAAI,iBAAiB;AAAG,gBAAQ,gBAAgB,eAAe,CAAC;AAEhE,cAAQ,IAAI,MAAM,OAAO,gBAAgB;AACzC,YAAM,WAAW,IAAI;AAAA,IACtB;AAAA,EACD;AACD;AA3BqE;AAA9D,IAAM,yBAAN","sourcesContent":["import { LoaderStrategy } from '@sapphire/pieces';\nimport type { Listener } from './Listener';\nimport type { ListenerStore } from './ListenerStore';\n\nexport class ListenerLoaderStrategy extends LoaderStrategy<Listener> {\n\tpublic override onLoad(_store: ListenerStore, piece: Listener) {\n\t\tconst listenerCallback = piece['_listener'];\n\t\tif (listenerCallback) {\n\t\t\tconst emitter = piece.emitter!;\n\n\t\t\t// Increment the maximum amount of listeners by one:\n\t\t\tconst maxListeners = emitter.getMaxListeners();\n\t\t\tif (maxListeners !== 0) emitter.setMaxListeners(maxListeners + 1);\n\n\t\t\temitter[piece.once ? 'once' : 'on'](piece.event, listenerCallback);\n\t\t}\n\t}\n\n\tpublic override onUnload(_store: ListenerStore, piece: Listener) {\n\t\tconst listenerCallback = piece['_listener'];\n\t\tif (!piece.once && listenerCallback) {\n\t\t\tconst emitter = piece.emitter!;\n\n\t\t\t// Increment the maximum amount of listeners by one:\n\t\t\tconst maxListeners = emitter.getMaxListeners();\n\t\t\tif (maxListeners !== 0) emitter.setMaxListeners(maxListeners - 1);\n\n\t\t\temitter.off(piece.event, listenerCallback);\n\t\t\tpiece['_listener'] = null;\n\t\t}\n\t}\n}\n"]}