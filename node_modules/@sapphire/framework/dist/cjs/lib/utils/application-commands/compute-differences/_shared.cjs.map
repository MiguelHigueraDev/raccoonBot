{"version":3,"sources":["../../../../../../src/lib/utils/application-commands/compute-differences/_shared.ts"],"names":[],"mappings":";;;;AAAA;AAAA,EACC;AAAA,EACA;AAAA,OAQM;AAEA,IAAM,yBAAyB,oBAAI,IAA0C;AAAA,EACnF,CAAC,6BAA6B,YAAY,YAAY;AAAA,EACtD,CAAC,6BAA6B,iBAAiB,kBAAkB;AAAA,EACjE,CAAC,6BAA6B,QAAQ,eAAe;AAAA,EACrD,CAAC,6BAA6B,SAAS,gBAAgB;AAAA,EACvD,CAAC,6BAA6B,SAAS,gBAAgB;AAAA,EACvD,CAAC,6BAA6B,MAAM,aAAa;AAAA,EACjD,CAAC,6BAA6B,SAAS,gBAAgB;AAAA,EACvD,CAAC,6BAA6B,MAAM,aAAa;AAAA,EACjD,CAAC,6BAA6B,aAAa,oBAAoB;AAAA,EAC/D,CAAC,6BAA6B,QAAQ,eAAe;AAAA,EACrD,CAAC,6BAA6B,YAAY,mBAAmB;AAC9D,CAAC;AAEM,IAAM,mBAAmB,CAAC,uBAAuB,SAAS,uBAAuB,IAAI;AACrF,IAAM,kBAAkB,CAAC,6BAA6B,iBAAiB,6BAA6B,UAAU;AAO9G,SAAS,sBAAsB,QAAyF;AAC9H,SAAO,CAAC,6BAA6B,SAAS,6BAA6B,MAAM,EAAE,SAAS,OAAO,IAAI;AACxG;AAFgB;AAIT,SAAS,iCACf,QACkE;AAClE,SAAO;AAAA,IACN,6BAA6B;AAAA;AAAA,IAC7B,6BAA6B;AAAA,IAC7B,6BAA6B;AAAA,EAC9B,EAAE,SAAS,OAAO,IAAI;AACvB;AARgB;AAUT,SAAS,uBAAuB,QAAuF;AAC7H,SAAO,OAAO,SAAS,6BAA6B;AACrD;AAFgB;AAIT,SAAS,uBAAuB,QAAmF;AACzH,SAAO,OAAO,SAAS,6BAA6B;AACrD;AAFgB","sourcesContent":["import {\n\tApplicationCommandOptionType,\n\tApplicationCommandType,\n\ttype APIApplicationCommandChannelOption,\n\ttype APIApplicationCommandIntegerOption,\n\ttype APIApplicationCommandNumberOption,\n\ttype APIApplicationCommandOption,\n\ttype APIApplicationCommandStringOption,\n\ttype APIApplicationCommandSubcommandGroupOption,\n\ttype APIApplicationCommandSubcommandOption\n} from 'discord-api-types/v10';\n\nexport const optionTypeToPrettyName = new Map<ApplicationCommandOptionType, string>([\n\t[ApplicationCommandOptionType.Subcommand, 'subcommand'],\n\t[ApplicationCommandOptionType.SubcommandGroup, 'subcommand group'],\n\t[ApplicationCommandOptionType.String, 'string option'],\n\t[ApplicationCommandOptionType.Integer, 'integer option'],\n\t[ApplicationCommandOptionType.Boolean, 'boolean option'],\n\t[ApplicationCommandOptionType.User, 'user option'],\n\t[ApplicationCommandOptionType.Channel, 'channel option'],\n\t[ApplicationCommandOptionType.Role, 'role option'],\n\t[ApplicationCommandOptionType.Mentionable, 'mentionable option'],\n\t[ApplicationCommandOptionType.Number, 'number option'],\n\t[ApplicationCommandOptionType.Attachment, 'attachment option']\n]);\n\nexport const contextMenuTypes = [ApplicationCommandType.Message, ApplicationCommandType.User];\nexport const subcommandTypes = [ApplicationCommandOptionType.SubcommandGroup, ApplicationCommandOptionType.Subcommand];\n\nexport type APIApplicationCommandSubcommandTypes = APIApplicationCommandSubcommandOption | APIApplicationCommandSubcommandGroupOption;\nexport type APIApplicationCommandMinAndMaxValueTypes = APIApplicationCommandIntegerOption | APIApplicationCommandNumberOption;\nexport type APIApplicationCommandChoosableAndAutocompletableTypes = APIApplicationCommandMinAndMaxValueTypes | APIApplicationCommandStringOption;\nexport type APIApplicationCommandMinMaxLengthTypes = APIApplicationCommandStringOption;\n\nexport function hasMinMaxValueSupport(option: APIApplicationCommandOption): option is APIApplicationCommandMinAndMaxValueTypes {\n\treturn [ApplicationCommandOptionType.Integer, ApplicationCommandOptionType.Number].includes(option.type);\n}\n\nexport function hasChoicesAndAutocompleteSupport(\n\toption: APIApplicationCommandOption\n): option is APIApplicationCommandChoosableAndAutocompletableTypes {\n\treturn [\n\t\tApplicationCommandOptionType.Integer, //\n\t\tApplicationCommandOptionType.Number,\n\t\tApplicationCommandOptionType.String\n\t].includes(option.type);\n}\n\nexport function hasMinMaxLengthSupport(option: APIApplicationCommandOption): option is APIApplicationCommandMinMaxLengthTypes {\n\treturn option.type === ApplicationCommandOptionType.String;\n}\n\nexport function hasChannelTypesSupport(option: APIApplicationCommandOption): option is APIApplicationCommandChannelOption {\n\treturn option.type === ApplicationCommandOptionType.Channel;\n}\n\nexport interface CommandDifference {\n\tkey: string;\n\texpected: string;\n\toriginal: string;\n}\n"]}