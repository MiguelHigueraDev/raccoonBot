'use strict';

var v10 = require('discord-api-types/v10');
var _shared_cjs = require('./compute-differences/_shared.cjs');
var default_member_permissions_cjs = require('./compute-differences/default_member_permissions.cjs');
var description_cjs = require('./compute-differences/description.cjs');
var dm_permission_cjs = require('./compute-differences/dm_permission.cjs');
var localizations_cjs = require('./compute-differences/localizations.cjs');
var name_cjs = require('./compute-differences/name.cjs');
var options_cjs = require('./compute-differences/options.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function getCommandDifferencesFast(existingCommand, apiData, guildCommand) {
  for (const _ of getCommandDifferences(existingCommand, apiData, guildCommand)) {
    return true;
  }
  return false;
}
__name(getCommandDifferencesFast, "getCommandDifferencesFast");
function* getCommandDifferences(existingCommand, apiData, guildCommand) {
  if (existingCommand.type !== v10.ApplicationCommandType.ChatInput && existingCommand.type) {
    if (_shared_cjs.contextMenuTypes.includes(existingCommand.type ?? v10.ApplicationCommandType.ChatInput)) {
      const casted2 = apiData;
      yield* name_cjs.checkName({ oldName: existingCommand.name, newName: casted2.name });
      if (!guildCommand) {
        yield* dm_permission_cjs.checkDMPermission(existingCommand.dm_permission, casted2.dm_permission);
      }
      yield* default_member_permissions_cjs.checkDefaultMemberPermissions(existingCommand.default_member_permissions, casted2.default_member_permissions);
      const originalLocalizedNames2 = existingCommand.name_localizations;
      const expectedLocalizedNames2 = casted2.name_localizations;
      yield* localizations_cjs.checkLocalizations({
        localeMapName: "nameLocalizations",
        localePresentMessage: "localized names",
        localeMissingMessage: "no localized names",
        originalLocalizedDescriptions: originalLocalizedNames2,
        expectedLocalizedDescriptions: expectedLocalizedNames2
      });
    }
    return;
  }
  const casted = apiData;
  yield* name_cjs.checkName({ oldName: existingCommand.name.toLowerCase(), newName: casted.name.toLowerCase() });
  const originalLocalizedNames = existingCommand.name_localizations;
  const expectedLocalizedNames = casted.name_localizations;
  yield* localizations_cjs.checkLocalizations({
    localeMapName: "nameLocalizations",
    localePresentMessage: "localized names",
    localeMissingMessage: "no localized names",
    originalLocalizedDescriptions: originalLocalizedNames,
    expectedLocalizedDescriptions: expectedLocalizedNames
  });
  if (!guildCommand) {
    yield* dm_permission_cjs.checkDMPermission(existingCommand.dm_permission, casted.dm_permission);
  }
  yield* default_member_permissions_cjs.checkDefaultMemberPermissions(existingCommand.default_member_permissions, casted.default_member_permissions);
  yield* description_cjs.checkDescription({ oldDescription: existingCommand.description, newDescription: casted.description });
  const originalLocalizedDescriptions = existingCommand.description_localizations;
  const expectedLocalizedDescriptions = casted.description_localizations;
  yield* localizations_cjs.checkLocalizations({
    localeMapName: "descriptionLocalizations",
    localePresentMessage: "localized descriptions",
    localeMissingMessage: "no localized descriptions",
    originalLocalizedDescriptions,
    expectedLocalizedDescriptions
  });
  yield* options_cjs.checkOptions(existingCommand.options, casted.options);
}
__name(getCommandDifferences, "getCommandDifferences");

exports.getCommandDifferences = getCommandDifferences;
exports.getCommandDifferencesFast = getCommandDifferencesFast;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=computeDifferences.cjs.map