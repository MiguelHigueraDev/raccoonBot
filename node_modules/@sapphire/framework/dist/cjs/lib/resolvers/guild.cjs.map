{"version":3,"sources":["../../../../src/lib/resolvers/guild.ts"],"names":[],"mappings":";;;;AAAA,SAAS,sBAAsB;AAC/B,SAAS,iBAAiB;AAC1B,SAAS,cAAc;AAEvB,SAAS,mBAAmB;AAE5B,eAAsB,aAAa,WAA2E;AAC7G,QAAM,UAAU,eAAe,KAAK,SAAS,GAAG,QAAQ;AACxD,QAAM,QAAQ,UAAU,MAAM,UAAU,OAAO,OAAO,MAAM,OAAO,EAAE,MAAM,MAAM,IAAI,IAAI;AAEzF,MAAI,OAAO;AACV,WAAO,OAAO,GAAG,KAAK;AAAA,EACvB;AAEA,SAAO,OAAO,IAAI,YAAY,kBAAkB;AACjD;AATsB","sourcesContent":["import { SnowflakeRegex } from '@sapphire/discord-utilities';\nimport { container } from '@sapphire/pieces';\nimport { Result } from '@sapphire/result';\nimport type { Guild } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\n\nexport async function resolveGuild(parameter: string): Promise<Result<Guild, Identifiers.ArgumentGuildError>> {\n\tconst guildId = SnowflakeRegex.exec(parameter)?.groups?.id;\n\tconst guild = guildId ? await container.client.guilds.fetch(guildId).catch(() => null) : null;\n\n\tif (guild) {\n\t\treturn Result.ok(guild);\n\t}\n\n\treturn Result.err(Identifiers.ArgumentGuildError);\n}\n"]}