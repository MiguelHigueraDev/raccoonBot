'use strict';

var result = require('@sapphire/result');
var Identifiers_cjs = require('../errors/Identifiers.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function resolveFloat(parameter, options) {
  const parsed = Number(parameter);
  if (Number.isNaN(parsed)) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentFloatError);
  }
  if (typeof options?.minimum === "number" && parsed < options.minimum) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentFloatTooSmall);
  }
  if (typeof options?.maximum === "number" && parsed > options.maximum) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentFloatTooLarge);
  }
  return result.Result.ok(parsed);
}
__name(resolveFloat, "resolveFloat");

exports.resolveFloat = resolveFloat;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=float.cjs.map