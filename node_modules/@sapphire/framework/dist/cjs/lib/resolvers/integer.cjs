'use strict';

var result = require('@sapphire/result');
var Identifiers_cjs = require('../errors/Identifiers.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
function resolveInteger(parameter, options) {
  const parsed = Number(parameter);
  if (!Number.isInteger(parsed)) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentIntegerError);
  }
  if (typeof options?.minimum === "number" && parsed < options.minimum) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentIntegerTooSmall);
  }
  if (typeof options?.maximum === "number" && parsed > options.maximum) {
    return result.Result.err(Identifiers_cjs.Identifiers.ArgumentIntegerTooLarge);
  }
  return result.Result.ok(parsed);
}
__name(resolveInteger, "resolveInteger");

exports.resolveInteger = resolveInteger;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=integer.cjs.map