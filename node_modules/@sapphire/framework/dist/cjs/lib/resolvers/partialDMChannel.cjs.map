{"version":3,"sources":["../../../../src/lib/resolvers/partialDMChannel.ts"],"names":[],"mappings":";;;;AAAA,SAAS,mBAAmB;AAC5B,SAAS,cAAc;AAEvB,SAAS,mBAAmB;AAC5B,SAAS,sBAAsB;AAExB,SAAS,wBACf,WACA,SAC8G;AAC9G,QAAM,SAAS,eAAe,WAAW,OAAO;AAChD,SAAO,OAAO,QAAQ,CAAC,YAAY;AAClC,QAAI,YAAY,OAAO,GAAG;AACzB,aAAO,OAAO,GAAG,OAAO;AAAA,IACzB;AAEA,WAAO,OAAO,IAAwC,YAAY,sBAAsB;AAAA,EACzF,CAAC;AACF;AAZgB","sourcesContent":["import { isDMChannel } from '@sapphire/discord.js-utilities';\nimport { Result } from '@sapphire/result';\nimport type { DMChannel, Message, PartialDMChannel } from 'discord.js';\nimport { Identifiers } from '../errors/Identifiers';\nimport { resolveChannel } from './channel';\n\nexport function resolvePartialDMChannel(\n\tparameter: string,\n\tmessage: Message\n): Result<DMChannel | PartialDMChannel, Identifiers.ArgumentChannelError | Identifiers.ArgumentDMChannelError> {\n\tconst result = resolveChannel(parameter, message);\n\treturn result.mapInto((channel) => {\n\t\tif (isDMChannel(channel)) {\n\t\t\treturn Result.ok(channel);\n\t\t}\n\n\t\treturn Result.err<Identifiers.ArgumentDMChannelError>(Identifiers.ArgumentDMChannelError);\n\t});\n}\n"]}