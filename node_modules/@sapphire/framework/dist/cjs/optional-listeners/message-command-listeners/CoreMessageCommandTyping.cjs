'use strict';

var discord_jsUtilities = require('@sapphire/discord.js-utilities');
var Listener_cjs = require('../../lib/structures/Listener.cjs');
var Events_cjs = require('../../lib/types/Events.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CoreListener = class _CoreListener extends Listener_cjs.Listener {
  constructor(context) {
    super(context, { event: Events_cjs.Events.MessageCommandRun });
    this.enabled = this.container.client.options.typing ?? false;
  }
  async run(message, command, payload) {
    if (!command.typing || discord_jsUtilities.isStageChannel(message.channel)) {
      return;
    }
    try {
      await message.channel.sendTyping();
    } catch (error) {
      message.client.emit(Events_cjs.Events.MessageCommandTypingError, error, { ...payload, command, message });
    }
  }
};
__name(_CoreListener, "CoreListener");
var CoreListener = _CoreListener;

exports.CoreListener = CoreListener;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=CoreMessageCommandTyping.cjs.map