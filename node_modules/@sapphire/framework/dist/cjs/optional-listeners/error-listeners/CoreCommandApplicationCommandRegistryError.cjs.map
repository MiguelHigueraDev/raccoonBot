{"version":3,"sources":["../../../../src/optional-listeners/error-listeners/CoreCommandApplicationCommandRegistryError.ts"],"names":[],"mappings":";;;;AACA,SAAS,gBAAgB;AACzB,SAAS,cAAc;AAEhB,IAAM,gBAAN,MAAM,sBAAqB,SAA+D;AAAA,EACzF,YAAY,SAAiC;AACnD,UAAM,SAAS,EAAE,OAAO,OAAO,uCAAuC,CAAC;AAAA,EACxE;AAAA,EAEO,IAAI,OAAgB,SAAkB;AAC5C,UAAM,EAAE,MAAM,SAAS,IAAI;AAC3B,SAAK,UAAU,OAAO;AAAA,MACrB,0FAA0F,IAAI,cAAc,SAAS,IAAI;AAAA,MACzH;AAAA,IACD;AAAA,EACD;AACD;AAZiG;AAA1F,IAAM,eAAN","sourcesContent":["import type { Command } from '../../lib/structures/Command';\nimport { Listener } from '../../lib/structures/Listener';\nimport { Events } from '../../lib/types/Events';\n\nexport class CoreListener extends Listener<typeof Events.CommandApplicationCommandRegistryError> {\n\tpublic constructor(context: Listener.LoaderContext) {\n\t\tsuper(context, { event: Events.CommandApplicationCommandRegistryError });\n\t}\n\n\tpublic run(error: unknown, command: Command) {\n\t\tconst { name, location } = command;\n\t\tthis.container.logger.error(\n\t\t\t`Encountered error while handling the command application command registry for command \"${name}\" at path \"${location.full}\"`,\n\t\t\terror\n\t\t);\n\t}\n}\n"]}