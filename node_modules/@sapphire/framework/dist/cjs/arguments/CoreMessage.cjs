'use strict';

var pieces = require('@sapphire/pieces');
var message_cjs = require('../lib/resolvers/message.cjs');
var Argument_cjs = require('../lib/structures/Argument.cjs');

var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var _CoreArgument = class _CoreArgument extends Argument_cjs.Argument {
  constructor(context) {
    super(context, { name: "message" });
  }
  async run(parameter, context) {
    const channel = context.channel ?? context.message.channel;
    const resolved = await message_cjs.resolveMessage(parameter, {
      messageOrInteraction: context.message,
      channel: context.channel,
      scan: context.scan ?? false
    });
    return resolved.mapErrInto(
      (identifier) => this.error({
        parameter,
        identifier,
        message: "The given argument did not resolve to a message.",
        context: { ...context, channel }
      })
    );
  }
};
__name(_CoreArgument, "CoreArgument");
var CoreArgument = _CoreArgument;
void pieces.container.stores.loadPiece({
  name: "message",
  piece: CoreArgument,
  store: "arguments"
});

exports.CoreArgument = CoreArgument;
//# sourceMappingURL=out.js.map
//# sourceMappingURL=CoreMessage.cjs.map